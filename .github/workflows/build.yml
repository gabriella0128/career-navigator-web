name: Frontend | Build → Push(Docker Hub) → (artifact) → Notify infra

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  SERVICE: frontend
  IMAGE_NAME: carnav-frontend
  DOCKERHUB_NAMESPACE: gabicate
  INFRA_REPO: gabriella0128/career-navigator-infra

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set TAG
        id: meta
        run: echo "TAG=main-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Compose FULL_IMAGE
        run: echo "FULL_IMAGE=docker.io/${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}" >> "$GITHUB_ENV"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # PR에서는 빌드만 체크 (푸시/아티팩트 X)
      - name: Build (no push) on PR
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.FULL_IMAGE }}:${{ steps.meta.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Notify infra (repository_dispatch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.INFRA_REPO_TOKEN }}
          repository: ${{ env.INFRA_REPO }}
          event-type: deploy
          client-payload: |
            {
              "service": "${{ env.SERVICE }}",
              "tag": "${{ steps.meta.outputs.TAG }}",
              "repo": "${{ github.repository }}",
              "run_id": "${{ github.run_id }}",
              "artifact_name": "frontend-image-${{ steps.meta.outputs.TAG }}",
              "image_name": "${{ env.IMAGE_NAME }}",
              "full_image": "${{ env.FULL_IMAGE }}"
            }
